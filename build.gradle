buildscript {
  repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.12.+'
    classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+'
    classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
    classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    classpath 'org.robolectric:robolectric-gradle-plugin:0.12.+'
  }
}

// Manifest version information!
def versionMajor = 2
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'robolectric'
apply plugin: 'hugo'

repositories {
  mavenCentral()
  maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
  compile 'com.google.android.gms:play-services:5.2.+@aar'
  compile 'com.android.support:support-v4:20.+'

  compile 'com.inkapplications:android-preferences:1.1.+'

  compile 'com.google.guava:guava:18.0'

  compile 'com.intellij:annotations:12.0'

  compile 'com.jakewharton.timber:timber:2.2.+'
  compile 'com.jakewharton:butterknife:5.1.+'
  debugCompile 'com.jakewharton.madge:madge:1.1.+'
  debugCompile 'com.jakewharton.scalpel:scalpel:1.1.+'

  compile 'com.squareup:otto:1.3.+'
  compile 'com.squareup.dagger:dagger:1.2.+'
  provided 'com.squareup.dagger:dagger-compiler:1.2.+'

  compile 'com.github.frankiesardo:icepick:2.3.+'
  provided 'com.github.frankiesardo:icepick-processor:2.3.+'

  compile 'com.crashlytics.android:crashlytics:1.+'

  androidTestCompile('junit:junit:4.11')
  androidTestCompile 'com.squareup:fest-android:1.0.+'
  androidTestCompile('org.robolectric:robolectric:2.3') {
    exclude module: 'classworlds'
    exclude module: 'commons-logging'
    exclude module: 'httpclient'
    exclude module: 'maven-artifact'
    exclude module: 'maven-artifact-manager'
    exclude module: 'maven-error-diagnostics'
    exclude module: 'maven-model'
    exclude module: 'maven-project'
    exclude module: 'maven-settings'
    exclude module: 'plexus-container-default'
    exclude module: 'plexus-interpolation'
    exclude module: 'plexus-utils'
    exclude module: 'wagon-file'
    exclude module: 'wagon-http-lightweight'
    exclude module: 'wagon-provider-api'
  }
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
  compileSdkVersion 19
  buildToolsVersion "19.1.0"

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 19

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    buildConfigField "String", "GA_TRACKING_ID", "\"${gaTrackingId}\""
  }

  signingConfigs {
    release {
      storeFile file(storeFilePath)
      storePassword keystorePassword
      keyAlias storeKeyAlias
      keyPassword aliasKeyPassword
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.dev'
      versionNameSuffix '-dev'
    }

    release {
      signingConfig signingConfigs.release
    }
  }

  lintOptions {
    abortOnError true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  sourceSets {
    androidTest.setRoot('src/test')
  }
}

